[{"E:\\ReactJS\\my-app\\src\\index.js":"1","E:\\ReactJS\\my-app\\src\\reportWebVitals.js":"2","E:\\ReactJS\\my-app\\src\\App.js":"3","E:\\ReactJS\\my-app\\src\\shared\\dishes.js":"4","E:\\ReactJS\\my-app\\src\\components\\Menucomponent.js":"5","E:\\ReactJS\\my-app\\src\\components\\DishdetailComponent.js":"6","E:\\ReactJS\\my-app\\src\\components\\MainComponent.js":"7","E:\\ReactJS\\my-app\\src\\components\\HeaderComponent.js":"8","E:\\ReactJS\\my-app\\src\\components\\FooterComponent.js":"9","E:\\ReactJS\\my-app\\src\\components\\HomeComponent.js":"10","E:\\ReactJS\\my-app\\src\\components\\ContactComponent.js":"11","E:\\ReactJS\\my-app\\src\\shared\\leaders.js":"12","E:\\ReactJS\\my-app\\src\\shared\\comments.js":"13","E:\\ReactJS\\my-app\\src\\shared\\promotions.js":"14","E:\\ReactJS\\my-app\\src\\components\\AboutComponent.js":"15"},{"size":639,"mtime":1608477587451,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1608221285642,"results":"18","hashOfConfig":"17"},{"size":332,"mtime":1608454848941,"results":"19","hashOfConfig":"17"},{"size":1490,"mtime":1608473886868,"results":"20","hashOfConfig":"17"},{"size":1409,"mtime":1608542728585,"results":"21","hashOfConfig":"17"},{"size":2608,"mtime":1608543236336,"results":"22","hashOfConfig":"17"},{"size":2040,"mtime":1608560270374,"results":"23","hashOfConfig":"17"},{"size":2661,"mtime":1608457447252,"results":"24","hashOfConfig":"17"},{"size":2637,"mtime":1608457596946,"results":"25","hashOfConfig":"17"},{"size":1135,"mtime":1608540786999,"results":"26","hashOfConfig":"17"},{"size":10395,"mtime":1608566112779,"results":"27","hashOfConfig":"17"},{"size":2382,"mtime":1608477735596,"results":"28","hashOfConfig":"17"},{"size":4280,"mtime":1608479237037,"results":"29","hashOfConfig":"17"},{"size":445,"mtime":1608477758219,"results":"30","hashOfConfig":"17"},{"size":3855,"mtime":1608560565995,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"117p687",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ReactJS\\my-app\\src\\index.js",[],["65","66"],"E:\\ReactJS\\my-app\\src\\reportWebVitals.js",[],"E:\\ReactJS\\my-app\\src\\App.js",[],"E:\\ReactJS\\my-app\\src\\shared\\dishes.js",[],"E:\\ReactJS\\my-app\\src\\components\\Menucomponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\DishdetailComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\MainComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\HeaderComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\FooterComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\HomeComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\ContactComponent.js",["67"],"import React,{Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem,Button,Form,FormGroup,Label,Input,Col,FormFeedback} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n         const target = event.target;\r\n         const value = target.type === 'checkbox' ? target.checked : target.value;\r\n         const name = target.name;\r\n\r\n         this.setState({\r\n            [name]: value\r\n         });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstname,lastname,telnum,email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length<3)\r\n           errors.firstname = \"Firstname should be >= 3 characters\";\r\n        else if(this.state.touched.firstname && firstname.length>10)\r\n        errors.firstname = \"Firstname should be <= 10 characters\";\r\n\r\n        if(this.state.touched.lastname && lastname.length<3)\r\n           errors.lastname = \"Lastname should be >= 3 characters\";\r\n        else if(this.state.touched.lastname && lastname.length>10)\r\n        errors.lastname = \"Lastname should be <= 10 characters\";\r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n           errors.telnum = \"Contact no. should contain only numbers\";\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !==1)\r\n           errors.email = \"Email should contain @ sign\";\r\n\r\n        return errors;\r\n    }\r\n    \r\n    render() {\r\n        const errors =  this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                 <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                 </Breadcrumb>\r\n                 <div className=\"col-12\">\r\n                     <h3>Contact Us</h3>\r\n                     <hr />\r\n                 </div>\r\n             </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send Us Your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                            <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                placeholder=\"First Name\"\r\n                                value={this.state.firstname}\r\n                                valid={errors.firstname === ''}\r\n                                invalid={errors.firstname !== ''}\r\n                                onBlur={this.handleBlur('firstname')} \r\n                                onChange={this.handleInputChange} />\r\n                                <FormFeedback>\r\n                                    {errors.firstname}\r\n                                </FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                value={this.state.lastname}\r\n                                valid={errors.lastname === ''}\r\n                                invalid={errors.lastname !== ''}\r\n                                onBlur={this.handleBlur('lastname')} \r\n                                onChange={this.handleInputChange} />\r\n                                <FormFeedback>\r\n                                    {errors.lastname}\r\n                                </FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlfor=\"telnum\" md={2}>Contact No.</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                placeholder=\"Contact No.\"\r\n                                value={this.state.telnum}\r\n                                valid={errors.telnum === ''}\r\n                                invalid={errors.telnum !== ''}\r\n                                onBlur={this.handleBlur('telnum')} \r\n                                onChange={this.handleInputChange}/>\r\n                                <FormFeedback>\r\n                                    {errors.telnum}\r\n                                </FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                valid={errors.email === ''}\r\n                                invalid={errors.email !==''}\r\n                                onBlur={this.handleBlur('email')} \r\n                                onChange={this.handleInputChange}/>\r\n                                <FormFeedback>\r\n                                    {errors.email}\r\n                                </FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size: 6,offset: 2}}>\r\n                             <FormGroup check>\r\n                                 <Label check>\r\n                                     <Input type=\"checkbox\" name=\"agree\"\r\n                                     checked={this.state.agree}\r\n                                     onChange={this.handleInputChange}/> {''}\r\n                                     <strong>May we contact you?</strong>\r\n                                 </Label>\r\n                             </FormGroup>\r\n                            </Col>\r\n                            <Col md={{size: 3,offset: 1}}>\r\n                                <Input type=\"select\" name=\"contactType\"\r\n                                value={this.state.contactType}\r\n                                onChange={this.handleInputChange}>\r\n                                  <option>Contact No.</option>\r\n                                  <option>Email</option>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlfor=\"feedback\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                rows=\"12\"\r\n                                value={this.state.message} \r\n                                onChange={this.handleInputChange}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Contact;","E:\\ReactJS\\my-app\\src\\shared\\leaders.js",[],"E:\\ReactJS\\my-app\\src\\shared\\comments.js",[],"E:\\ReactJS\\my-app\\src\\shared\\promotions.js",[],["68","69"],"E:\\ReactJS\\my-app\\src\\components\\AboutComponent.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":116,"column":25,"nodeType":"76","endLine":116,"endColumn":67},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["79"],["80"],"no-global-assign","no-unsafe-negation"]