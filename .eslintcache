[{"E:\\ReactJS\\my-app\\src\\index.js":"1","E:\\ReactJS\\my-app\\src\\reportWebVitals.js":"2","E:\\ReactJS\\my-app\\src\\App.js":"3","E:\\ReactJS\\my-app\\src\\shared\\dishes.js":"4","E:\\ReactJS\\my-app\\src\\components\\Menucomponent.js":"5","E:\\ReactJS\\my-app\\src\\components\\DishdetailComponent.js":"6","E:\\ReactJS\\my-app\\src\\components\\MainComponent.js":"7","E:\\ReactJS\\my-app\\src\\components\\HeaderComponent.js":"8","E:\\ReactJS\\my-app\\src\\components\\FooterComponent.js":"9","E:\\ReactJS\\my-app\\src\\components\\HomeComponent.js":"10","E:\\ReactJS\\my-app\\src\\components\\ContactComponent.js":"11","E:\\ReactJS\\my-app\\src\\shared\\leaders.js":"12","E:\\ReactJS\\my-app\\src\\shared\\comments.js":"13","E:\\ReactJS\\my-app\\src\\shared\\promotions.js":"14","E:\\ReactJS\\my-app\\src\\components\\AboutComponent.js":"15","E:\\ReactJS\\my-app\\src\\redux\\configureStore.js":"16","E:\\ReactJS\\my-app\\src\\redux\\dishes.js":"17","E:\\ReactJS\\my-app\\src\\redux\\comments.js":"18","E:\\ReactJS\\my-app\\src\\redux\\promotions.js":"19","E:\\ReactJS\\my-app\\src\\redux\\leaders.js":"20"},{"size":639,"mtime":1608477587451,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608221285642,"results":"23","hashOfConfig":"22"},{"size":504,"mtime":1608737316765,"results":"24","hashOfConfig":"22"},{"size":1490,"mtime":1608473886868,"results":"25","hashOfConfig":"22"},{"size":1409,"mtime":1608542728585,"results":"26","hashOfConfig":"22"},{"size":6826,"mtime":1608792918614,"results":"27","hashOfConfig":"22"},{"size":1996,"mtime":1608737836402,"results":"28","hashOfConfig":"22"},{"size":5055,"mtime":1608649858577,"results":"29","hashOfConfig":"22"},{"size":2637,"mtime":1608457596946,"results":"30","hashOfConfig":"22"},{"size":1135,"mtime":1608540786999,"results":"31","hashOfConfig":"22"},{"size":10837,"mtime":1608740707024,"results":"32","hashOfConfig":"22"},{"size":2382,"mtime":1608477735596,"results":"33","hashOfConfig":"22"},{"size":4280,"mtime":1608479237037,"results":"34","hashOfConfig":"22"},{"size":445,"mtime":1608477758219,"results":"35","hashOfConfig":"22"},{"size":3855,"mtime":1608560565995,"results":"36","hashOfConfig":"22"},{"size":474,"mtime":1610176935529,"results":"37","hashOfConfig":"22"},{"size":179,"mtime":1610176606723,"results":"38","hashOfConfig":"22"},{"size":187,"mtime":1610176604466,"results":"39","hashOfConfig":"22"},{"size":195,"mtime":1610176601730,"results":"40","hashOfConfig":"22"},{"size":183,"mtime":1610176600435,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"117p687",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ReactJS\\my-app\\src\\index.js",[],["87","88"],"E:\\ReactJS\\my-app\\src\\reportWebVitals.js",[],"E:\\ReactJS\\my-app\\src\\App.js",[],"E:\\ReactJS\\my-app\\src\\shared\\dishes.js",[],["89","90"],"E:\\ReactJS\\my-app\\src\\components\\Menucomponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\DishdetailComponent.js",["91","92","93"],"import React from 'react';\r\nimport { Card, CardImg,CardText, CardBody, CardTitle,Breadcrumb,BreadcrumbItem,\r\n    Button,Modal,ModalHeader,ModalBody,Row,Col,Label } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n      return (\r\n        <div>\r\n          <Card>\r\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n            <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      );\r\n    } \r\n    else {\r\n      return <div></div>;\r\n    }\r\n  }\r\nfunction RenderComments({comments}) {\r\n\r\n    if (comments == null) {\r\n        return (<div></div>)\r\n    }\r\n    let comments_list = comments;     \r\n    const cmnts = comments_list.map(comment => {\r\n        return (\r\n            <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author},\r\n                &nbsp;\r\n                {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                </p>\r\n            </li>\r\n        );\r\n    });\r\n\r\n        return (\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {cmnts}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\nconst DishDetail = (props) => {\r\n\r\n        console.log('DishDetail component render is invoked');\r\n        \r\n        if (props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 col-md-5 m-1\"> \r\n                    <RenderDish dish={props.dish} />\r\n            </div>\r\n            <div className=\"col-12 col-md-5 m-1\">      \r\n                    <RenderComments comments={props.comments} />\r\n                <CommentForm />\r\n            </div>\r\n            </div>\r\n            </div>\r\n            );\r\n        };\r\n    }\r\n        const maxLength = len => val => !val || val.length <= len;\r\n        const minLength = len => val => val && val.length >= len;\r\n\r\n        class CommentForm extends React.Component {\r\n            constructor(props) {\r\n              super(props);\r\n              this.state = {\r\n                isModalOpen: false\r\n              };\r\n              this.toggleModal = this.toggleModal.bind(this);\r\n              this.handleSubmit = this.handleSubmit.bind(this);\r\n            }\r\n\r\n            toggleModal() {\r\n                this.setState({\r\n                  isModalOpen: !this.state.isModalOpen\r\n                });\r\n              }\r\n\r\n              handleSubmit(values) {\r\n                console.log(\"Current State is: \" + JSON.stringify(values));\r\n                alert(\"Current State is: \" + JSON.stringify(values));\r\n                this.toggleModal();\r\n              }\r\n\r\n              render() {\r\n                  return(\r\n                    <div>\r\n                    <Button outline onClick={this.toggleModal} margin=\"mr-auto\">\r\n                      <span className=\"fa fa-pencil\"></span> Submit Comment\r\n                    </Button>\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n            <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                            className=\"form-control\"\r\n                                            defaultValue=\"1\">\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={2}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    className=\"form-control\"\r\n                    id=\"comment\"\r\n                    model=\".comment\"\r\n                    name=\"comment\"\r\n                    rows=\"6\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 12 }}>\r\n                  <Button color=\"primary\" value=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default DishDetail;","E:\\ReactJS\\my-app\\src\\components\\MainComponent.js",["94"],"import React, {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './Menucomponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n        promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}/>\r\n      );\r\n    };\r\n\r\n    const AboutPage = () => {\r\n      return <About leaders={this.props.leaders} />;\r\n    };\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n  \r\n  \r\n    return (\r\n    <div>\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}/>\r\n          <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n          <Route exact path=\"/contactus\" component={Contact}/>\r\n          <Route path=\"/aboutus\" component={AboutPage}/>\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n    \r\n","E:\\ReactJS\\my-app\\src\\components\\HeaderComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\FooterComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\HomeComponent.js",[],"E:\\ReactJS\\my-app\\src\\components\\ContactComponent.js",["95","96","97","98","99","100","101","102"],"import React,{Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem,Button,Label,Col,Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n \r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       \r\n    }\r\n\r\n    handleInputChange(event) {\r\n         const target = event.target;\r\n         const value = target.type === 'checkbox' ? target.checked : target.value;\r\n         const name = target.name;\r\n\r\n         this.setState({\r\n            [name]: value\r\n         });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n    render() {\r\n        \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                 <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                 </Breadcrumb>\r\n                 <div className=\"col-12\">\r\n                     <h3>Contact Us</h3>\r\n                     <hr />\r\n                 </div>\r\n             </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send Us Your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}/>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Contact;","E:\\ReactJS\\my-app\\src\\shared\\leaders.js",[],"E:\\ReactJS\\my-app\\src\\shared\\comments.js",[],"E:\\ReactJS\\my-app\\src\\shared\\promotions.js",[],"E:\\ReactJS\\my-app\\src\\components\\AboutComponent.js",[],"E:\\ReactJS\\my-app\\src\\redux\\configureStore.js",[],"E:\\ReactJS\\my-app\\src\\redux\\dishes.js",[],"E:\\ReactJS\\my-app\\src\\redux\\comments.js",[],"E:\\ReactJS\\my-app\\src\\redux\\promotions.js",[],"E:\\ReactJS\\my-app\\src\\redux\\leaders.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":128,"column":41,"nodeType":"111","endLine":130,"endColumn":62},{"ruleId":"109","severity":1,"message":"112","line":144,"column":19,"nodeType":"111","endLine":154,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":172,"column":19,"nodeType":"111","endLine":178,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":23,"column":3,"nodeType":"116","messageId":"117","endLine":26,"endColumn":4},{"ruleId":"118","severity":1,"message":"119","line":76,"column":25,"nodeType":"111","endLine":76,"endColumn":67},{"ruleId":"109","severity":1,"message":"112","line":90,"column":37,"nodeType":"111","endLine":95,"endColumn":45},{"ruleId":"109","severity":1,"message":"112","line":111,"column":37,"nodeType":"111","endLine":116,"endColumn":46},{"ruleId":"109","severity":1,"message":"112","line":132,"column":37,"nodeType":"111","endLine":137,"endColumn":46},{"ruleId":"109","severity":1,"message":"112","line":154,"column":37,"nodeType":"111","endLine":159,"endColumn":46},{"ruleId":"109","severity":1,"message":"120","line":175,"column":45,"nodeType":"111","endLine":177,"endColumn":52},{"ruleId":"109","severity":1,"message":"110","line":183,"column":37,"nodeType":"111","endLine":184,"endColumn":66},{"ruleId":"109","severity":1,"message":"113","line":193,"column":37,"nodeType":"111","endLine":195,"endColumn":68},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]